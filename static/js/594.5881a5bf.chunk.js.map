{"version":3,"file":"static/js/594.5881a5bf.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","solver.worker.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/* eslint-disable no-restricted-globals */\nself.addEventListener('message', (event) => {\n    const { plainField, nextPuyos, selectedChain, displayedSteps } = event.data;\n    // plainField: 長さ78の数値型の配列\n    // nextPuyos: 長さ displayedSteps, 2の数値型の配列\n    const field = plainField;\n    const steps = displayedSteps;\n\n    console.log(\"in web worker: \")\n    console.log(field);\n\n    // ここで謎ぷよを解く処理を実行する\n    // ...\n\n    // resultは解の配列を想定しています\n    const result = solveNazoPuyo(field, nextPuyos, selectedChain, steps);\n    if (result) {\n        console.log(\"解が見つかりました！\");\n        self.postMessage(result);\n    } else {\n        console.log(\"解が見つかりませんでした。\");\n        self.postMessage(field);\n    }\n\n    // self.postMessage(result);\n});\n\n\nfunction fall(field) {\n    const numberOfRows = 13;\n    const numberOfColumns = 6;\n\n    // 各列ごとに操作を行う\n    for (let col = 0; col < numberOfColumns; col++) {\n        let writeIndex = numberOfRows * (col + 1) - 1;\n\n        // 列の要素を下から上に走査し、0以外の値を下方向に移動\n        for (let row = numberOfRows - 1; row >= 0; row--) {\n            const index = col * numberOfRows + row;\n            if (field[index] !== 0) {\n                field[writeIndex] = field[index];\n                if (writeIndex !== index) {\n                    field[index] = 0;\n                }\n                writeIndex--;\n            }\n        }\n    }\n}\n\nfunction singleChain(field) {\n    let hasChained = false;\n    const visited = Array(field.length).fill(false);\n\n    for (let i = 1; i < field.length; i++) {\n        if (field[i] <= 0 || field[i] >= 6 || i % 13 === 0 || visited[i]) {\n            continue;\n        }\n\n        const current_color = field[i];\n        const visitedInLoop = new Set([i]);\n        const queue = [i];\n\n        while (queue.length > 0) {\n            const idx = queue.shift();\n            visited[idx] = true;\n\n            const checkAndPush = (neighborIdx) => {\n                if (\n                    neighborIdx >= 1 &&\n                    neighborIdx < field.length &&\n                    field[neighborIdx] === current_color &&\n                    !visitedInLoop.has(neighborIdx) &&\n                    !visited[neighborIdx]\n                ) {\n                    visitedInLoop.add(neighborIdx);\n                    queue.push(neighborIdx);\n                }\n            };\n\n            if (idx % 13 !== 1) checkAndPush(idx - 1);\n            if (idx % 13 !== 12) checkAndPush(idx + 1);\n            if (idx < 65) checkAndPush(idx + 13);\n            if (idx > 13) checkAndPush(idx - 13);\n        }\n\n        let connectedPuyosCount = 0;\n        for (const index of visitedInLoop) {\n            if (field[index] === current_color) {\n                connectedPuyosCount++;\n            }\n        }\n\n\n        if (connectedPuyosCount >= 4) {\n            hasChained = true;\n\n            visitedInLoop.forEach((j) => {\n                field[j] = 0;\n\n                const neighbors = [\n                    j % 13 === 1 ? null : j - 1,\n                    j % 13 === 12 ? null : j + 1,\n                    j + 13,\n                    j - 13,\n                ];\n\n                neighbors.forEach((neighborIdx) => {\n                    if (\n                        neighborIdx !== null &&\n                        neighborIdx >= 1 &&\n                        neighborIdx < field.length &&\n                        field[neighborIdx] === 6\n                    ) {\n                        field[neighborIdx] = 0;\n                    }\n                });\n            });\n        }\n    }\n\n    return hasChained;\n}\n\n\nfunction checkChain(field) {\n    const visited = Array(field.length).fill(false);\n\n    for (let i = 1; i < field.length; i++) {\n        if (field[i] <= 0 || field[i] >= 6 || i % 13 === 0 || visited[i]) {\n            continue;\n        }\n\n        const current_color = field[i];\n        const visitedInLoop = new Set([i]);\n        const queue = [i];\n\n        while (queue.length > 0) {\n            const idx = queue.shift();\n            visited[idx] = true;\n\n            const checkAndPush = (neighborIdx) => {\n                if (\n                    neighborIdx >= 1 &&\n                    neighborIdx < field.length &&\n                    field[neighborIdx] === current_color &&\n                    !visitedInLoop.has(neighborIdx) &&\n                    !visited[neighborIdx]\n                ) {\n                    visitedInLoop.add(neighborIdx);\n                    queue.push(neighborIdx);\n                }\n            };\n\n            if (idx % 13 !== 1) checkAndPush(idx - 1);\n            if (idx % 13 !== 12) checkAndPush(idx + 1);\n            if (idx < 65) checkAndPush(idx + 13);\n            if (idx > 13) checkAndPush(idx - 13);\n        }\n\n        let connectedPuyosCount = 0;\n        for (const index of visitedInLoop) {\n            if (field[index] === current_color) {\n                connectedPuyosCount++;\n            }\n        }\n\n        if (connectedPuyosCount >= 4) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction chain(field) {\n    let hasChained;\n    let chainCount = 0;\n\n    do {\n        fall(field);\n        hasChained = singleChain(field);\n        if (hasChained) {\n            chainCount++;\n        }\n    } while (hasChained);\n\n    return chainCount;\n}\n\nfunction popHighestColoredPuyoIndex(field, j) {\n    for (let i = 0; i < 13; i++) {\n      const puyo = field[j * 13 + i];\n      if (1 <= puyo && puyo < 6) {\n        field[j * 13 + i] = 0;\n        return;\n      }\n    }\n\n    console.log(\"popHighestColoredPuyoIndex erroe!\");\n    return; // 該当するぷよが見つからなかった場合\n  }\n  \n\nfunction solveNazoPuyo(field, nextPuyos, selectedChain, steps) {\n    fall(field);\n\n    const tryToPlaceNextPuyos = (field, nextPuyos, index, steps) => {\n        if (index === steps) {\n            const fieldCopy = [...field];\n            if (chain(fieldCopy) === selectedChain) {\n                return field;\n            } else {\n                return null;\n            }\n        }\n\n        const puyo1 = nextPuyos[index][0]; // 親ぷよ\n        const puyo2 = nextPuyos[index][1]; // 子ぷよ\n\n        for (let j = 0; j < 6; j++) {\n            const idx = j * 13;\n\n            const configs = [\n                { pos1: idx, pos2: idx + 1 },\n                { pos1: idx + 1, pos2: idx },\n            ];\n\n            if (j !== 0) {\n                configs.push({ pos1: idx, pos2: idx - 13 });\n            }\n\n            if (j !== 5) {\n                configs.push({ pos1: idx, pos2: idx + 13 });\n            }\n\n            for (const config of configs) {\n                if (field[config.pos1] !== 0 || field[config.pos2] !== 0) {\n                    continue;\n                }\n\n                field[config.pos1] = puyo1;\n                field[config.pos2] = puyo2;\n\n                fall(field);\n                if (index + 1 < steps && checkChain(field)) {\n                    // field[config.pos1] = 0;\n                    // field[config.pos2] = 0;\n                    // fall(field);\n                    popHighestColoredPuyoIndex(field, Math.floor(config.pos1/13));\n                    popHighestColoredPuyoIndex(field, Math.floor(config.pos2/13));\n                    continue;\n                }\n\n                const result = tryToPlaceNextPuyos(field, nextPuyos, index + 1, steps);\n                if (result !== null) {\n                    return result;\n                } else {\n                    popHighestColoredPuyoIndex(field, Math.floor(config.pos1/13));\n                    popHighestColoredPuyoIndex(field, Math.floor(config.pos2/13));\n                    fall(field);\n                }\n            }\n        }\n\n        return null;\n    };\n\n    return tryToPlaceNextPuyos(field, nextPuyos, 0, steps);\n}\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","iter","Symbol","iterator","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","s","done","value","e","_e","f","err","normalCompletion","didErr","step","next","_e2","fall","field","col","writeIndex","row","numberOfRows","index","singleChain","hasChained","visited","fill","_loop","current_color","visitedInLoop","Set","queue","idx","shift","checkAndPush","neighborIdx","has","add","push","_step","connectedPuyosCount","_iterator","forEach","j","checkChain","_loop2","_step2","_iterator2","v","_ret2","popHighestColoredPuyoIndex","puyo","console","log","self","addEventListener","event","_event$data","data","plainField","nextPuyos","selectedChain","steps","displayedSteps","result","tryToPlaceNextPuyos","chainCount","chain","puyo1","puyo2","configs","pos1","pos2","_i","_configs","config","Math","floor","solveNazoPuyo","postMessage"],"sourceRoot":""}